(()=>{"use strict";const t=(l,e="",r=!0)=>{null!==l&&(null!==l.right&&t(l.right,`${e}${r?"│   ":"    "}`,!1),console.log(`${e}${r?"└── ":"┌── "}${l.data}`),null!==l.left&&t(l.left,`${e}${r?"    ":"│   "}`,!0))};class l{constructor(t){this.data=t,this.left=null,this.right=null}}const e=function t(l){if(l.length<=1)return l;{const e=Math.floor(l.length/2),r=l.slice(0,e),n=l.slice(e);return function(t,l){const e=[];for(;t.length>0&&l.length>0;)if(t[0]<l[0]){const l=t.shift();e.push(l)}else if(t[0]>l[0]){const t=l.shift();e.push(t)}else if(t[0]==l[0]){const r=t.shift();l.shift(),e.push(r)}return e.concat(t,l)}(t(r),t(n))}}([1,7,4,23,8,9,4,3,5,7,9,67,6345,324]),r=new class{constructor(t,l,e){this.root=this.buildTree(t,l,e)}buildTree(t,e,r){if(e>r)return null;const n=Math.floor((e+r)/2),i=new l(t[n]);return i.left=this.buildTree(t,e,n-1),i.right=this.buildTree(t,n+1,r),i}}(e,0,e.length-1);console.log(r),t(r.root),function(t,l){let e=function(t,l){let e=t;for(;e;){if(4==e.data)return e;if(0==e.data&&!e.left&&!e.right)return null;4<e.data?e=e.left:4>e.data&&(e=e.right)}}(t);if(!e)return null;if(e.left||e.right||(e.data=null),e.left&&!e.right&&(e.data=e.left.data,e.left=null),!e.left&&e.right&&(e.data=e.right.data,e.right=null),e.left&&e.right){let t=e.right;for(;t.left;)t=t.left;e.data=t.data,e.right=t.right,t.data=null}}(r.root),t(r.root)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,